Grammar

    0 $accept: mini_c $end

    1 mini_c: translation_unit

    2 translation_unit: external_dcl
    3                 | translation_unit external_dcl

    4 external_dcl: function_def
    5             | declaration

    6 function_def: function_header compound_st

    7 function_header: dcl_spec function_name formal_param

    8 dcl_spec: dcl_specifiers

    9 dcl_specifiers: dcl_specifier
   10               | dcl_specifiers dcl_specifier

   11 dcl_specifier: type_qualifier
   12              | type_specifier

   13 type_qualifier: TCONST

   14 type_specifier: TINT
   15               | TVOID

   16 function_name: TIDENT

   17 formal_param: '(' opt_formal_param ')'

   18 opt_formal_param: formal_param_list
   19                 | /* empty */

   20 formal_param_list: param_dcl
   21                  | formal_param_list ',' param_dcl

   22 param_dcl: dcl_spec declarator

   23 compound_st: '{' opt_dcl_list opt_stat_list '}'

   24 opt_dcl_list: declaration_list
   25             | /* empty */

   26 declaration_list: declaration
   27                 | declaration_list declaration

   28 declaration: dcl_spec init_dcl_list ';'

   29 init_dcl_list: init_declarator
   30              | init_dcl_list ',' init_declarator

   31 init_declarator: declarator

   32 declarator: TIDENT
   33           | TIDENT '[' opt_number ']'

   34 opt_number: TNUMBER
   35           | /* empty */

   36 opt_stat_list: statement_list
   37              | /* empty */

   38 statement_list: statement
   39               | statement_list statement

   40 statement: compound_st
   41          | expression_st
   42          | if_st
   43          | while_st
   44          | return_st

   45 expression_st: opt_expression ';'

   46 opt_expression: expression
   47               | /* empty */

   48 if_st: TIF '(' expression ')' statement
   49      | TIF '(' expression ')' statement TELSE statement

   50 while_st: TWHILE '(' expression ')' statement

   51 return_st: TRETURN opt_expression ';'

   52 expression: assignment_exp

   53 assignment_exp: logical_or_exp
   54               | unary_exp '=' assignment_exp
   55               | unary_exp TADD_ASSIGN assignment_exp
   56               | unary_exp TSUB_ASSIGN assignment_exp
   57               | unary_exp TMUL_ASSIGN assignment_exp
   58               | unary_exp TDIV_ASSIGN assignment_exp
   59               | unary_exp TMOD_ASSIGN assignment_exp

   60 logical_or_exp: logical_and_exp
   61               | logical_or_exp TOR logical_and_exp

   62 logical_and_exp: equality_exp
   63                | logical_and_exp TAND equality_exp

   64 equality_exp: relational_exp
   65             | equality_exp TEQUAL relational_exp
   66             | equality_exp TNOTEQUAL relational_exp

   67 relational_exp: additive_exp
   68               | relational_exp '>' additive_exp
   69               | relational_exp '<' additive_exp
   70               | relational_exp TGREATE additive_exp
   71               | relational_exp TLESSE additive_exp

   72 additive_exp: multiplicative_exp
   73             | additive_exp '+' multiplicative_exp
   74             | additive_exp '-' multiplicative_exp

   75 multiplicative_exp: unary_exp
   76                   | multiplicative_exp '*' unary_exp
   77                   | multiplicative_exp '/' unary_exp
   78                   | multiplicative_exp '%' unary_exp

   79 unary_exp: postfix_exp
   80          | '-' unary_exp
   81          | '!' unary_exp
   82          | TINC unary_exp
   83          | TDEC unary_exp

   84 postfix_exp: primary_exp
   85            | postfix_exp '[' expression ']'
   86            | postfix_exp '(' opt_actual_param ')'
   87            | postfix_exp TINC
   88            | postfix_exp TDEC

   89 opt_actual_param: actual_param
   90                 | /* empty */

   91 actual_param: actual_param_list

   92 actual_param_list: assignment_exp
   93                  | actual_param_list ',' assignment_exp

   94 primary_exp: TIDENT
   95            | TNUMBER
   96            | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 81
'%' (37) 78
'(' (40) 17 48 49 50 86 96
')' (41) 17 48 49 50 86 96
'*' (42) 76
'+' (43) 73
',' (44) 21 30 93
'-' (45) 74 80
'/' (47) 77
';' (59) 28 45 51
'<' (60) 69
'=' (61) 54
'>' (62) 68
'[' (91) 33 85
']' (93) 33 85
'{' (123) 23
'}' (125) 23
error (256)
TIDENT (258) 16 32 33 94
TNUMBER (259) 34 95
TCONST (260) 13
TELSE (261) 49
TIF (262) 48 49
TINT (263) 14
TRETURN (264) 51
TVOID (265) 15
TWHILE (266) 50
TADD_ASSIGN (267) 55
TSUB_ASSIGN (268) 56
TMUL_ASSIGN (269) 57
TDIV_ASSIGN (270) 58
TMOD_ASSIGN (271) 59
TOR (272) 61
TAND (273) 63
TEQUAL (274) 65
TNOTEQUAL (275) 66
TGREATE (276) 70
TLESSE (277) 71
TINC (278) 82 87
TDEC (279) 83 88
LOWER_THAN_ELSE (280)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
mini_c (44)
    on left: 1, on right: 0
translation_unit (45)
    on left: 2 3, on right: 1 3
external_dcl (46)
    on left: 4 5, on right: 2 3
function_def (47)
    on left: 6, on right: 4
function_header (48)
    on left: 7, on right: 6
dcl_spec (49)
    on left: 8, on right: 7 22 28
dcl_specifiers (50)
    on left: 9 10, on right: 8 10
dcl_specifier (51)
    on left: 11 12, on right: 9 10
type_qualifier (52)
    on left: 13, on right: 11
type_specifier (53)
    on left: 14 15, on right: 12
function_name (54)
    on left: 16, on right: 7
formal_param (55)
    on left: 17, on right: 7
opt_formal_param (56)
    on left: 18 19, on right: 17
formal_param_list (57)
    on left: 20 21, on right: 18 21
param_dcl (58)
    on left: 22, on right: 20 21
compound_st (59)
    on left: 23, on right: 6 40
opt_dcl_list (60)
    on left: 24 25, on right: 23
declaration_list (61)
    on left: 26 27, on right: 24 27
declaration (62)
    on left: 28, on right: 5 26 27
init_dcl_list (63)
    on left: 29 30, on right: 28 30
init_declarator (64)
    on left: 31, on right: 29 30
declarator (65)
    on left: 32 33, on right: 22 31
opt_number (66)
    on left: 34 35, on right: 33
opt_stat_list (67)
    on left: 36 37, on right: 23
statement_list (68)
    on left: 38 39, on right: 36 39
statement (69)
    on left: 40 41 42 43 44, on right: 38 39 48 49 50
expression_st (70)
    on left: 45, on right: 41
opt_expression (71)
    on left: 46 47, on right: 45 51
if_st (72)
    on left: 48 49, on right: 42
while_st (73)
    on left: 50, on right: 43
return_st (74)
    on left: 51, on right: 44
expression (75)
    on left: 52, on right: 46 48 49 50 85 96
assignment_exp (76)
    on left: 53 54 55 56 57 58 59, on right: 52 54 55 56 57 58 59 92
    93
logical_or_exp (77)
    on left: 60 61, on right: 53 61
logical_and_exp (78)
    on left: 62 63, on right: 60 61 63
equality_exp (79)
    on left: 64 65 66, on right: 62 63 65 66
relational_exp (80)
    on left: 67 68 69 70 71, on right: 64 65 66 68 69 70 71
additive_exp (81)
    on left: 72 73 74, on right: 67 68 69 70 71 73 74
multiplicative_exp (82)
    on left: 75 76 77 78, on right: 72 73 74 76 77 78
unary_exp (83)
    on left: 79 80 81 82 83, on right: 54 55 56 57 58 59 75 76 77 78
    80 81 82 83
postfix_exp (84)
    on left: 84 85 86 87 88, on right: 79 85 86 87 88
opt_actual_param (85)
    on left: 89 90, on right: 86
actual_param (86)
    on left: 91, on right: 89
actual_param_list (87)
    on left: 92 93, on right: 91 93
primary_exp (88)
    on left: 94 95 96, on right: 84


state 0

    0 $accept: . mini_c $end

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    mini_c            go to state 4
    translation_unit  go to state 5
    external_dcl      go to state 6
    function_def      go to state 7
    function_header   go to state 8
    dcl_spec          go to state 9
    dcl_specifiers    go to state 10
    dcl_specifier     go to state 11
    type_qualifier    go to state 12
    type_specifier    go to state 13
    declaration       go to state 14


state 1

   13 type_qualifier: TCONST .

    $default  reduce using rule 13 (type_qualifier)


state 2

   14 type_specifier: TINT .

    $default  reduce using rule 14 (type_specifier)


state 3

   15 type_specifier: TVOID .

    $default  reduce using rule 15 (type_specifier)


state 4

    0 $accept: mini_c . $end

    $end  shift, and go to state 15


state 5

    1 mini_c: translation_unit .
    3 translation_unit: translation_unit . external_dcl

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 1 (mini_c)

    external_dcl     go to state 16
    function_def     go to state 7
    function_header  go to state 8
    dcl_spec         go to state 9
    dcl_specifiers   go to state 10
    dcl_specifier    go to state 11
    type_qualifier   go to state 12
    type_specifier   go to state 13
    declaration      go to state 14


state 6

    2 translation_unit: external_dcl .

    $default  reduce using rule 2 (translation_unit)


state 7

    4 external_dcl: function_def .

    $default  reduce using rule 4 (external_dcl)


state 8

    6 function_def: function_header . compound_st

    '{'  shift, and go to state 17

    compound_st  go to state 18


state 9

    7 function_header: dcl_spec . function_name formal_param
   28 declaration: dcl_spec . init_dcl_list ';'

    TIDENT  shift, and go to state 19

    function_name    go to state 20
    init_dcl_list    go to state 21
    init_declarator  go to state 22
    declarator       go to state 23


state 10

    8 dcl_spec: dcl_specifiers .
   10 dcl_specifiers: dcl_specifiers . dcl_specifier

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 8 (dcl_spec)

    dcl_specifier   go to state 24
    type_qualifier  go to state 12
    type_specifier  go to state 13


state 11

    9 dcl_specifiers: dcl_specifier .

    $default  reduce using rule 9 (dcl_specifiers)


state 12

   11 dcl_specifier: type_qualifier .

    $default  reduce using rule 11 (dcl_specifier)


state 13

   12 dcl_specifier: type_specifier .

    $default  reduce using rule 12 (dcl_specifier)


state 14

    5 external_dcl: declaration .

    $default  reduce using rule 5 (external_dcl)


state 15

    0 $accept: mini_c $end .

    $default  accept


state 16

    3 translation_unit: translation_unit external_dcl .

    $default  reduce using rule 3 (translation_unit)


state 17

   23 compound_st: '{' . opt_dcl_list opt_stat_list '}'

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 25 (opt_dcl_list)

    dcl_spec          go to state 25
    dcl_specifiers    go to state 10
    dcl_specifier     go to state 11
    type_qualifier    go to state 12
    type_specifier    go to state 13
    opt_dcl_list      go to state 26
    declaration_list  go to state 27
    declaration       go to state 28


state 18

    6 function_def: function_header compound_st .

    $default  reduce using rule 6 (function_def)


state 19

   16 function_name: TIDENT .
   32 declarator: TIDENT .
   33           | TIDENT . '[' opt_number ']'

    '['  shift, and go to state 29

    '('       reduce using rule 16 (function_name)
    $default  reduce using rule 32 (declarator)


state 20

    7 function_header: dcl_spec function_name . formal_param

    '('  shift, and go to state 30

    formal_param  go to state 31


state 21

   28 declaration: dcl_spec init_dcl_list . ';'
   30 init_dcl_list: init_dcl_list . ',' init_declarator

    ','  shift, and go to state 32
    ';'  shift, and go to state 33


state 22

   29 init_dcl_list: init_declarator .

    $default  reduce using rule 29 (init_dcl_list)


state 23

   31 init_declarator: declarator .

    $default  reduce using rule 31 (init_declarator)


state 24

   10 dcl_specifiers: dcl_specifiers dcl_specifier .

    $default  reduce using rule 10 (dcl_specifiers)


state 25

   28 declaration: dcl_spec . init_dcl_list ';'

    TIDENT  shift, and go to state 34

    init_dcl_list    go to state 21
    init_declarator  go to state 22
    declarator       go to state 23


state 26

   23 compound_st: '{' opt_dcl_list . opt_stat_list '}'

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TIF      shift, and go to state 37
    TRETURN  shift, and go to state 38
    TWHILE   shift, and go to state 39
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '{'      shift, and go to state 17
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    ';'       reduce using rule 47 (opt_expression)
    $default  reduce using rule 37 (opt_stat_list)

    compound_st         go to state 45
    opt_stat_list       go to state 46
    statement_list      go to state 47
    statement           go to state 48
    expression_st       go to state 49
    opt_expression      go to state 50
    if_st               go to state 51
    while_st            go to state 52
    return_st           go to state 53
    expression          go to state 54
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 27

   24 opt_dcl_list: declaration_list .
   27 declaration_list: declaration_list . declaration

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 24 (opt_dcl_list)

    dcl_spec        go to state 25
    dcl_specifiers  go to state 10
    dcl_specifier   go to state 11
    type_qualifier  go to state 12
    type_specifier  go to state 13
    declaration     go to state 65


state 28

   26 declaration_list: declaration .

    $default  reduce using rule 26 (declaration_list)


state 29

   33 declarator: TIDENT '[' . opt_number ']'

    TNUMBER  shift, and go to state 66

    $default  reduce using rule 35 (opt_number)

    opt_number  go to state 67


state 30

   17 formal_param: '(' . opt_formal_param ')'

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 19 (opt_formal_param)

    dcl_spec           go to state 68
    dcl_specifiers     go to state 10
    dcl_specifier      go to state 11
    type_qualifier     go to state 12
    type_specifier     go to state 13
    opt_formal_param   go to state 69
    formal_param_list  go to state 70
    param_dcl          go to state 71


state 31

    7 function_header: dcl_spec function_name formal_param .

    $default  reduce using rule 7 (function_header)


state 32

   30 init_dcl_list: init_dcl_list ',' . init_declarator

    TIDENT  shift, and go to state 34

    init_declarator  go to state 72
    declarator       go to state 23


state 33

   28 declaration: dcl_spec init_dcl_list ';' .

    $default  reduce using rule 28 (declaration)


state 34

   32 declarator: TIDENT .
   33           | TIDENT . '[' opt_number ']'

    '['  shift, and go to state 29

    $default  reduce using rule 32 (declarator)


state 35

   94 primary_exp: TIDENT .

    $default  reduce using rule 94 (primary_exp)


state 36

   95 primary_exp: TNUMBER .

    $default  reduce using rule 95 (primary_exp)


state 37

   48 if_st: TIF . '(' expression ')' statement
   49      | TIF . '(' expression ')' statement TELSE statement

    '('  shift, and go to state 73


state 38

   51 return_st: TRETURN . opt_expression ';'

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    $default  reduce using rule 47 (opt_expression)

    opt_expression      go to state 74
    expression          go to state 54
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 39

   50 while_st: TWHILE . '(' expression ')' statement

    '('  shift, and go to state 75


state 40

   82 unary_exp: TINC . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 76
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 41

   83 unary_exp: TDEC . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 77
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 42

   96 primary_exp: '(' . expression ')'

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    expression          go to state 78
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 43

   80 unary_exp: '-' . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 79
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 44

   81 unary_exp: '!' . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 80
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 45

   40 statement: compound_st .

    $default  reduce using rule 40 (statement)


state 46

   23 compound_st: '{' opt_dcl_list opt_stat_list . '}'

    '}'  shift, and go to state 81


state 47

   36 opt_stat_list: statement_list .
   39 statement_list: statement_list . statement

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TIF      shift, and go to state 37
    TRETURN  shift, and go to state 38
    TWHILE   shift, and go to state 39
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '{'      shift, and go to state 17
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    ';'       reduce using rule 47 (opt_expression)
    $default  reduce using rule 36 (opt_stat_list)

    compound_st         go to state 45
    statement           go to state 82
    expression_st       go to state 49
    opt_expression      go to state 50
    if_st               go to state 51
    while_st            go to state 52
    return_st           go to state 53
    expression          go to state 54
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 48

   38 statement_list: statement .

    $default  reduce using rule 38 (statement_list)


state 49

   41 statement: expression_st .

    $default  reduce using rule 41 (statement)


state 50

   45 expression_st: opt_expression . ';'

    ';'  shift, and go to state 83


state 51

   42 statement: if_st .

    $default  reduce using rule 42 (statement)


state 52

   43 statement: while_st .

    $default  reduce using rule 43 (statement)


state 53

   44 statement: return_st .

    $default  reduce using rule 44 (statement)


state 54

   46 opt_expression: expression .

    $default  reduce using rule 46 (opt_expression)


state 55

   52 expression: assignment_exp .

    $default  reduce using rule 52 (expression)


state 56

   53 assignment_exp: logical_or_exp .
   61 logical_or_exp: logical_or_exp . TOR logical_and_exp

    TOR  shift, and go to state 84

    $default  reduce using rule 53 (assignment_exp)


state 57

   60 logical_or_exp: logical_and_exp .
   63 logical_and_exp: logical_and_exp . TAND equality_exp

    TAND  shift, and go to state 85

    $default  reduce using rule 60 (logical_or_exp)


state 58

   62 logical_and_exp: equality_exp .
   65 equality_exp: equality_exp . TEQUAL relational_exp
   66             | equality_exp . TNOTEQUAL relational_exp

    TEQUAL     shift, and go to state 86
    TNOTEQUAL  shift, and go to state 87

    $default  reduce using rule 62 (logical_and_exp)


state 59

   64 equality_exp: relational_exp .
   68 relational_exp: relational_exp . '>' additive_exp
   69               | relational_exp . '<' additive_exp
   70               | relational_exp . TGREATE additive_exp
   71               | relational_exp . TLESSE additive_exp

    TGREATE  shift, and go to state 88
    TLESSE   shift, and go to state 89
    '>'      shift, and go to state 90
    '<'      shift, and go to state 91

    $default  reduce using rule 64 (equality_exp)


state 60

   67 relational_exp: additive_exp .
   73 additive_exp: additive_exp . '+' multiplicative_exp
   74             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 67 (relational_exp)


state 61

   72 additive_exp: multiplicative_exp .
   76 multiplicative_exp: multiplicative_exp . '*' unary_exp
   77                   | multiplicative_exp . '/' unary_exp
   78                   | multiplicative_exp . '%' unary_exp

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 72 (additive_exp)


state 62

   54 assignment_exp: unary_exp . '=' assignment_exp
   55               | unary_exp . TADD_ASSIGN assignment_exp
   56               | unary_exp . TSUB_ASSIGN assignment_exp
   57               | unary_exp . TMUL_ASSIGN assignment_exp
   58               | unary_exp . TDIV_ASSIGN assignment_exp
   59               | unary_exp . TMOD_ASSIGN assignment_exp
   75 multiplicative_exp: unary_exp .

    TADD_ASSIGN  shift, and go to state 97
    TSUB_ASSIGN  shift, and go to state 98
    TMUL_ASSIGN  shift, and go to state 99
    TDIV_ASSIGN  shift, and go to state 100
    TMOD_ASSIGN  shift, and go to state 101
    '='          shift, and go to state 102

    $default  reduce using rule 75 (multiplicative_exp)


state 63

   79 unary_exp: postfix_exp .
   85 postfix_exp: postfix_exp . '[' expression ']'
   86            | postfix_exp . '(' opt_actual_param ')'
   87            | postfix_exp . TINC
   88            | postfix_exp . TDEC

    TINC  shift, and go to state 103
    TDEC  shift, and go to state 104
    '('   shift, and go to state 105
    '['   shift, and go to state 106

    $default  reduce using rule 79 (unary_exp)


state 64

   84 postfix_exp: primary_exp .

    $default  reduce using rule 84 (postfix_exp)


state 65

   27 declaration_list: declaration_list declaration .

    $default  reduce using rule 27 (declaration_list)


state 66

   34 opt_number: TNUMBER .

    $default  reduce using rule 34 (opt_number)


state 67

   33 declarator: TIDENT '[' opt_number . ']'

    ']'  shift, and go to state 107


state 68

   22 param_dcl: dcl_spec . declarator

    TIDENT  shift, and go to state 34

    declarator  go to state 108


state 69

   17 formal_param: '(' opt_formal_param . ')'

    ')'  shift, and go to state 109


state 70

   18 opt_formal_param: formal_param_list .
   21 formal_param_list: formal_param_list . ',' param_dcl

    ','  shift, and go to state 110

    $default  reduce using rule 18 (opt_formal_param)


state 71

   20 formal_param_list: param_dcl .

    $default  reduce using rule 20 (formal_param_list)


state 72

   30 init_dcl_list: init_dcl_list ',' init_declarator .

    $default  reduce using rule 30 (init_dcl_list)


state 73

   48 if_st: TIF '(' . expression ')' statement
   49      | TIF '(' . expression ')' statement TELSE statement

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    expression          go to state 111
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 74

   51 return_st: TRETURN opt_expression . ';'

    ';'  shift, and go to state 112


state 75

   50 while_st: TWHILE '(' . expression ')' statement

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    expression          go to state 113
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 76

   82 unary_exp: TINC unary_exp .

    $default  reduce using rule 82 (unary_exp)


state 77

   83 unary_exp: TDEC unary_exp .

    $default  reduce using rule 83 (unary_exp)


state 78

   96 primary_exp: '(' expression . ')'

    ')'  shift, and go to state 114


state 79

   80 unary_exp: '-' unary_exp .

    $default  reduce using rule 80 (unary_exp)


state 80

   81 unary_exp: '!' unary_exp .

    $default  reduce using rule 81 (unary_exp)


state 81

   23 compound_st: '{' opt_dcl_list opt_stat_list '}' .

    $default  reduce using rule 23 (compound_st)


state 82

   39 statement_list: statement_list statement .

    $default  reduce using rule 39 (statement_list)


state 83

   45 expression_st: opt_expression ';' .

    $default  reduce using rule 45 (expression_st)


state 84

   61 logical_or_exp: logical_or_exp TOR . logical_and_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    logical_and_exp     go to state 115
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 85

   63 logical_and_exp: logical_and_exp TAND . equality_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    equality_exp        go to state 117
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 86

   65 equality_exp: equality_exp TEQUAL . relational_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    relational_exp      go to state 118
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 87

   66 equality_exp: equality_exp TNOTEQUAL . relational_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    relational_exp      go to state 119
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 88

   70 relational_exp: relational_exp TGREATE . additive_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    additive_exp        go to state 120
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 89

   71 relational_exp: relational_exp TLESSE . additive_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    additive_exp        go to state 121
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 90

   68 relational_exp: relational_exp '>' . additive_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    additive_exp        go to state 122
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 91

   69 relational_exp: relational_exp '<' . additive_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    additive_exp        go to state 123
    multiplicative_exp  go to state 61
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 92

   73 additive_exp: additive_exp '+' . multiplicative_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    multiplicative_exp  go to state 124
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 93

   74 additive_exp: additive_exp '-' . multiplicative_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    multiplicative_exp  go to state 125
    unary_exp           go to state 116
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 94

   76 multiplicative_exp: multiplicative_exp '*' . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 126
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 95

   77 multiplicative_exp: multiplicative_exp '/' . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 127
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 96

   78 multiplicative_exp: multiplicative_exp '%' . unary_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    unary_exp    go to state 128
    postfix_exp  go to state 63
    primary_exp  go to state 64


state 97

   55 assignment_exp: unary_exp TADD_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 129
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 98

   56 assignment_exp: unary_exp TSUB_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 130
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 99

   57 assignment_exp: unary_exp TMUL_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 131
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 100

   58 assignment_exp: unary_exp TDIV_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 132
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 101

   59 assignment_exp: unary_exp TMOD_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 133
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 102

   54 assignment_exp: unary_exp '=' . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 134
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 103

   87 postfix_exp: postfix_exp TINC .

    $default  reduce using rule 87 (postfix_exp)


state 104

   88 postfix_exp: postfix_exp TDEC .

    $default  reduce using rule 88 (postfix_exp)


state 105

   86 postfix_exp: postfix_exp '(' . opt_actual_param ')'

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    $default  reduce using rule 90 (opt_actual_param)

    assignment_exp      go to state 135
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    opt_actual_param    go to state 136
    actual_param        go to state 137
    actual_param_list   go to state 138
    primary_exp         go to state 64


state 106

   85 postfix_exp: postfix_exp '[' . expression ']'

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    expression          go to state 139
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 107

   33 declarator: TIDENT '[' opt_number ']' .

    $default  reduce using rule 33 (declarator)


state 108

   22 param_dcl: dcl_spec declarator .

    $default  reduce using rule 22 (param_dcl)


state 109

   17 formal_param: '(' opt_formal_param ')' .

    $default  reduce using rule 17 (formal_param)


state 110

   21 formal_param_list: formal_param_list ',' . param_dcl

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    dcl_spec        go to state 68
    dcl_specifiers  go to state 10
    dcl_specifier   go to state 11
    type_qualifier  go to state 12
    type_specifier  go to state 13
    param_dcl       go to state 140


state 111

   48 if_st: TIF '(' expression . ')' statement
   49      | TIF '(' expression . ')' statement TELSE statement

    ')'  shift, and go to state 141


state 112

   51 return_st: TRETURN opt_expression ';' .

    $default  reduce using rule 51 (return_st)


state 113

   50 while_st: TWHILE '(' expression . ')' statement

    ')'  shift, and go to state 142


state 114

   96 primary_exp: '(' expression ')' .

    $default  reduce using rule 96 (primary_exp)


state 115

   61 logical_or_exp: logical_or_exp TOR logical_and_exp .
   63 logical_and_exp: logical_and_exp . TAND equality_exp

    TAND  shift, and go to state 85

    $default  reduce using rule 61 (logical_or_exp)


state 116

   75 multiplicative_exp: unary_exp .

    $default  reduce using rule 75 (multiplicative_exp)


state 117

   63 logical_and_exp: logical_and_exp TAND equality_exp .
   65 equality_exp: equality_exp . TEQUAL relational_exp
   66             | equality_exp . TNOTEQUAL relational_exp

    TEQUAL     shift, and go to state 86
    TNOTEQUAL  shift, and go to state 87

    $default  reduce using rule 63 (logical_and_exp)


state 118

   65 equality_exp: equality_exp TEQUAL relational_exp .
   68 relational_exp: relational_exp . '>' additive_exp
   69               | relational_exp . '<' additive_exp
   70               | relational_exp . TGREATE additive_exp
   71               | relational_exp . TLESSE additive_exp

    TGREATE  shift, and go to state 88
    TLESSE   shift, and go to state 89
    '>'      shift, and go to state 90
    '<'      shift, and go to state 91

    $default  reduce using rule 65 (equality_exp)


state 119

   66 equality_exp: equality_exp TNOTEQUAL relational_exp .
   68 relational_exp: relational_exp . '>' additive_exp
   69               | relational_exp . '<' additive_exp
   70               | relational_exp . TGREATE additive_exp
   71               | relational_exp . TLESSE additive_exp

    TGREATE  shift, and go to state 88
    TLESSE   shift, and go to state 89
    '>'      shift, and go to state 90
    '<'      shift, and go to state 91

    $default  reduce using rule 66 (equality_exp)


state 120

   70 relational_exp: relational_exp TGREATE additive_exp .
   73 additive_exp: additive_exp . '+' multiplicative_exp
   74             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 70 (relational_exp)


state 121

   71 relational_exp: relational_exp TLESSE additive_exp .
   73 additive_exp: additive_exp . '+' multiplicative_exp
   74             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 71 (relational_exp)


state 122

   68 relational_exp: relational_exp '>' additive_exp .
   73 additive_exp: additive_exp . '+' multiplicative_exp
   74             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 68 (relational_exp)


state 123

   69 relational_exp: relational_exp '<' additive_exp .
   73 additive_exp: additive_exp . '+' multiplicative_exp
   74             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 92
    '-'  shift, and go to state 93

    $default  reduce using rule 69 (relational_exp)


state 124

   73 additive_exp: additive_exp '+' multiplicative_exp .
   76 multiplicative_exp: multiplicative_exp . '*' unary_exp
   77                   | multiplicative_exp . '/' unary_exp
   78                   | multiplicative_exp . '%' unary_exp

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 73 (additive_exp)


state 125

   74 additive_exp: additive_exp '-' multiplicative_exp .
   76 multiplicative_exp: multiplicative_exp . '*' unary_exp
   77                   | multiplicative_exp . '/' unary_exp
   78                   | multiplicative_exp . '%' unary_exp

    '*'  shift, and go to state 94
    '/'  shift, and go to state 95
    '%'  shift, and go to state 96

    $default  reduce using rule 74 (additive_exp)


state 126

   76 multiplicative_exp: multiplicative_exp '*' unary_exp .

    $default  reduce using rule 76 (multiplicative_exp)


state 127

   77 multiplicative_exp: multiplicative_exp '/' unary_exp .

    $default  reduce using rule 77 (multiplicative_exp)


state 128

   78 multiplicative_exp: multiplicative_exp '%' unary_exp .

    $default  reduce using rule 78 (multiplicative_exp)


state 129

   55 assignment_exp: unary_exp TADD_ASSIGN assignment_exp .

    $default  reduce using rule 55 (assignment_exp)


state 130

   56 assignment_exp: unary_exp TSUB_ASSIGN assignment_exp .

    $default  reduce using rule 56 (assignment_exp)


state 131

   57 assignment_exp: unary_exp TMUL_ASSIGN assignment_exp .

    $default  reduce using rule 57 (assignment_exp)


state 132

   58 assignment_exp: unary_exp TDIV_ASSIGN assignment_exp .

    $default  reduce using rule 58 (assignment_exp)


state 133

   59 assignment_exp: unary_exp TMOD_ASSIGN assignment_exp .

    $default  reduce using rule 59 (assignment_exp)


state 134

   54 assignment_exp: unary_exp '=' assignment_exp .

    $default  reduce using rule 54 (assignment_exp)


state 135

   92 actual_param_list: assignment_exp .

    $default  reduce using rule 92 (actual_param_list)


state 136

   86 postfix_exp: postfix_exp '(' opt_actual_param . ')'

    ')'  shift, and go to state 143


state 137

   89 opt_actual_param: actual_param .

    $default  reduce using rule 89 (opt_actual_param)


state 138

   91 actual_param: actual_param_list .
   93 actual_param_list: actual_param_list . ',' assignment_exp

    ','  shift, and go to state 144

    $default  reduce using rule 91 (actual_param)


state 139

   85 postfix_exp: postfix_exp '[' expression . ']'

    ']'  shift, and go to state 145


state 140

   21 formal_param_list: formal_param_list ',' param_dcl .

    $default  reduce using rule 21 (formal_param_list)


state 141

   48 if_st: TIF '(' expression ')' . statement
   49      | TIF '(' expression ')' . statement TELSE statement

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TIF      shift, and go to state 37
    TRETURN  shift, and go to state 38
    TWHILE   shift, and go to state 39
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '{'      shift, and go to state 17
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    $default  reduce using rule 47 (opt_expression)

    compound_st         go to state 45
    statement           go to state 146
    expression_st       go to state 49
    opt_expression      go to state 50
    if_st               go to state 51
    while_st            go to state 52
    return_st           go to state 53
    expression          go to state 54
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 142

   50 while_st: TWHILE '(' expression ')' . statement

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TIF      shift, and go to state 37
    TRETURN  shift, and go to state 38
    TWHILE   shift, and go to state 39
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '{'      shift, and go to state 17
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    $default  reduce using rule 47 (opt_expression)

    compound_st         go to state 45
    statement           go to state 147
    expression_st       go to state 49
    opt_expression      go to state 50
    if_st               go to state 51
    while_st            go to state 52
    return_st           go to state 53
    expression          go to state 54
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 143

   86 postfix_exp: postfix_exp '(' opt_actual_param ')' .

    $default  reduce using rule 86 (postfix_exp)


state 144

   93 actual_param_list: actual_param_list ',' . assignment_exp

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    assignment_exp      go to state 148
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 145

   85 postfix_exp: postfix_exp '[' expression ']' .

    $default  reduce using rule 85 (postfix_exp)


state 146

   48 if_st: TIF '(' expression ')' statement .
   49      | TIF '(' expression ')' statement . TELSE statement

    TELSE  shift, and go to state 149

    $default  reduce using rule 48 (if_st)


state 147

   50 while_st: TWHILE '(' expression ')' statement .

    $default  reduce using rule 50 (while_st)


state 148

   93 actual_param_list: actual_param_list ',' assignment_exp .

    $default  reduce using rule 93 (actual_param_list)


state 149

   49 if_st: TIF '(' expression ')' statement TELSE . statement

    TIDENT   shift, and go to state 35
    TNUMBER  shift, and go to state 36
    TIF      shift, and go to state 37
    TRETURN  shift, and go to state 38
    TWHILE   shift, and go to state 39
    TINC     shift, and go to state 40
    TDEC     shift, and go to state 41
    '('      shift, and go to state 42
    '{'      shift, and go to state 17
    '-'      shift, and go to state 43
    '!'      shift, and go to state 44

    $default  reduce using rule 47 (opt_expression)

    compound_st         go to state 45
    statement           go to state 150
    expression_st       go to state 49
    opt_expression      go to state 50
    if_st               go to state 51
    while_st            go to state 52
    return_st           go to state 53
    expression          go to state 54
    assignment_exp      go to state 55
    logical_or_exp      go to state 56
    logical_and_exp     go to state 57
    equality_exp        go to state 58
    relational_exp      go to state 59
    additive_exp        go to state 60
    multiplicative_exp  go to state 61
    unary_exp           go to state 62
    postfix_exp         go to state 63
    primary_exp         go to state 64


state 150

   49 if_st: TIF '(' expression ')' statement TELSE statement .

    $default  reduce using rule 49 (if_st)
