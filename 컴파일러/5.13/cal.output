Rules never reduced

   16 function_name: TIDENT


State 19 conflicts: 1 shift/reduce
State 148 conflicts: 1 shift/reduce


Grammar

    0 $accept: mini_c $end

    1 mini_c: translation_unit

    2 translation_unit: external_dcl
    3                 | translation_unit external_dcl

    4 external_dcl: function_def
    5             | declaration

    6 function_def: function_header compound_st

    7 function_header: dcl_spec function_name formal_param

    8 dcl_spec: dcl_specifiers

    9 dcl_specifiers: dcl_specifier
   10               | dcl_specifiers dcl_specifier

   11 dcl_specifier: type_qualifier
   12              | type_specifier

   13 type_qualifier: TCONST

   14 type_specifier: TINT
   15               | TVOID

   16 function_name: TIDENT

   17 formal_param: '(' opt_formal_param ')'

   18 opt_formal_param: formal_param_list
   19                 | /* empty */

   20 formal_param_list: param_dcl
   21                  | formal_param_list ',' param_dcl

   22 param_dcl: dcl_spec declarator

   23 compound_st: '{' opt_dcl_list opt_stat_list '}'

   24 opt_dcl_list: declaration_list
   25             | /* empty */

   26 declaration_list: declaration
   27                 | declaration_list declaration

   28 declaration: dcl_spec init_dcl_list ';'

   29 init_dcl_list: init_declarator
   30              | init_dcl_list ',' init_declarator

   31 init_declarator: declarator

   32 declarator: TIDENT
   33           | TIDENT '[' opt_number ']'
   34           | TIDENT '(' opt_number ')'

   35 opt_number: TNUMBER
   36           | /* empty */

   37 opt_stat_list: statement_list
   38              | /* empty */

   39 statement_list: statement
   40               | statement_list statement

   41 statement: compound_st
   42          | expression_st
   43          | if_st
   44          | while_st
   45          | return_st

   46 expression_st: opt_expression ';'

   47 opt_expression: expression
   48               | /* empty */

   49 if_st: TIF '(' expression ')' statement
   50      | TIF '(' expression ')' statement TELSE statement

   51 while_st: TWHILE '(' expression ')' statement

   52 return_st: TRETURN opt_expression ';'

   53 expression: assignment_exp

   54 assignment_exp: logical_or_exp
   55               | unary_exp '=' assignment_exp
   56               | unary_exp TADD_ASSIGN assignment_exp
   57               | unary_exp TSUB_ASSIGN assignment_exp
   58               | unary_exp TMUL_ASSIGN assignment_exp
   59               | unary_exp TDIV_ASSIGN assignment_exp
   60               | unary_exp TMOD_ASSIGN assignment_exp

   61 logical_or_exp: logical_and_exp
   62               | logical_or_exp TOR logical_and_exp

   63 logical_and_exp: equality_exp
   64                | logical_and_exp TAND equality_exp

   65 equality_exp: relational_exp
   66             | equality_exp TEQUAL relational_exp
   67             | equality_exp TNOTEQUAL relational_exp

   68 relational_exp: additive_exp
   69               | relational_exp '>' additive_exp
   70               | relational_exp '<' additive_exp
   71               | relational_exp TGREATE additive_exp
   72               | relational_exp TLESSE additive_exp

   73 additive_exp: multiplicative_exp
   74             | additive_exp '+' multiplicative_exp
   75             | additive_exp '-' multiplicative_exp

   76 multiplicative_exp: unary_exp
   77                   | multiplicative_exp '*' unary_exp
   78                   | multiplicative_exp '/' unary_exp
   79                   | multiplicative_exp '%' unary_exp

   80 unary_exp: postfix_exp
   81          | '-' unary_exp
   82          | '!' unary_exp
   83          | TINC unary_exp
   84          | TDEC unary_exp

   85 postfix_exp: primary_exp
   86            | postfix_exp '[' expression ']'
   87            | postfix_exp '(' opt_actual_param ')'
   88            | postfix_exp TINC
   89            | postfix_exp TDEC

   90 opt_actual_param: actual_param_list
   91                 | /* empty */

   92 actual_param_list: assignment_exp
   93                  | actual_param_list ',' assignment_exp

   94 primary_exp: TIDENT
   95            | TNUMBER
   96            | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 82
'%' (37) 79
'(' (40) 17 34 49 50 51 87 96
')' (41) 17 34 49 50 51 87 96
'*' (42) 77
'+' (43) 74
',' (44) 21 30 93
'-' (45) 75 81
'/' (47) 78
';' (59) 28 46 52
'<' (60) 70
'=' (61) 55
'>' (62) 69
'[' (91) 33 86
']' (93) 33 86
'{' (123) 23
'}' (125) 23
error (256)
TIDENT (258) 16 32 33 34 94
TNUMBER (259) 35 95
TCONST (260) 13
TELSE (261) 50
TIF (262) 49 50
TINT (263) 14
TRETURN (264) 52
TVOID (265) 15
TWHILE (266) 51
TADD_ASSIGN (267) 56
TSUB_ASSIGN (268) 57
TMUL_ASSIGN (269) 58
TDIV_ASSIGN (270) 59
TMOD_ASSIGN (271) 60
TOR (272) 62
TAND (273) 64
TEQUAL (274) 66
TNOTEQUAL (275) 67
TGREATE (276) 71
TLESSE (277) 72
TINC (278) 83 88
TDEC (279) 84 89


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
mini_c (43)
    on left: 1, on right: 0
translation_unit (44)
    on left: 2 3, on right: 1 3
external_dcl (45)
    on left: 4 5, on right: 2 3
function_def (46)
    on left: 6, on right: 4
function_header (47)
    on left: 7, on right: 6
dcl_spec (48)
    on left: 8, on right: 7 22 28
dcl_specifiers (49)
    on left: 9 10, on right: 8 10
dcl_specifier (50)
    on left: 11 12, on right: 9 10
type_qualifier (51)
    on left: 13, on right: 11
type_specifier (52)
    on left: 14 15, on right: 12
function_name (53)
    on left: 16, on right: 7
formal_param (54)
    on left: 17, on right: 7
opt_formal_param (55)
    on left: 18 19, on right: 17
formal_param_list (56)
    on left: 20 21, on right: 18 21
param_dcl (57)
    on left: 22, on right: 20 21
compound_st (58)
    on left: 23, on right: 6 41
opt_dcl_list (59)
    on left: 24 25, on right: 23
declaration_list (60)
    on left: 26 27, on right: 24 27
declaration (61)
    on left: 28, on right: 5 26 27
init_dcl_list (62)
    on left: 29 30, on right: 28 30
init_declarator (63)
    on left: 31, on right: 29 30
declarator (64)
    on left: 32 33 34, on right: 22 31
opt_number (65)
    on left: 35 36, on right: 33 34
opt_stat_list (66)
    on left: 37 38, on right: 23
statement_list (67)
    on left: 39 40, on right: 37 40
statement (68)
    on left: 41 42 43 44 45, on right: 39 40 49 50 51
expression_st (69)
    on left: 46, on right: 42
opt_expression (70)
    on left: 47 48, on right: 46 52
if_st (71)
    on left: 49 50, on right: 43
while_st (72)
    on left: 51, on right: 44
return_st (73)
    on left: 52, on right: 45
expression (74)
    on left: 53, on right: 47 49 50 51 86 96
assignment_exp (75)
    on left: 54 55 56 57 58 59 60, on right: 53 55 56 57 58 59 60 92
    93
logical_or_exp (76)
    on left: 61 62, on right: 54 62
logical_and_exp (77)
    on left: 63 64, on right: 61 62 64
equality_exp (78)
    on left: 65 66 67, on right: 63 64 66 67
relational_exp (79)
    on left: 68 69 70 71 72, on right: 65 66 67 69 70 71 72
additive_exp (80)
    on left: 73 74 75, on right: 68 69 70 71 72 74 75
multiplicative_exp (81)
    on left: 76 77 78 79, on right: 73 74 75 77 78 79
unary_exp (82)
    on left: 80 81 82 83 84, on right: 55 56 57 58 59 60 76 77 78 79
    81 82 83 84
postfix_exp (83)
    on left: 85 86 87 88 89, on right: 80 86 87 88 89
opt_actual_param (84)
    on left: 90 91, on right: 87
actual_param_list (85)
    on left: 92 93, on right: 90 93
primary_exp (86)
    on left: 94 95 96, on right: 85


state 0

    0 $accept: . mini_c $end

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    mini_c            go to state 4
    translation_unit  go to state 5
    external_dcl      go to state 6
    function_def      go to state 7
    function_header   go to state 8
    dcl_spec          go to state 9
    dcl_specifiers    go to state 10
    dcl_specifier     go to state 11
    type_qualifier    go to state 12
    type_specifier    go to state 13
    declaration       go to state 14


state 1

   13 type_qualifier: TCONST .

    $default  reduce using rule 13 (type_qualifier)


state 2

   14 type_specifier: TINT .

    $default  reduce using rule 14 (type_specifier)


state 3

   15 type_specifier: TVOID .

    $default  reduce using rule 15 (type_specifier)


state 4

    0 $accept: mini_c . $end

    $end  shift, and go to state 15


state 5

    1 mini_c: translation_unit .
    3 translation_unit: translation_unit . external_dcl

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 1 (mini_c)

    external_dcl     go to state 16
    function_def     go to state 7
    function_header  go to state 8
    dcl_spec         go to state 9
    dcl_specifiers   go to state 10
    dcl_specifier    go to state 11
    type_qualifier   go to state 12
    type_specifier   go to state 13
    declaration      go to state 14


state 6

    2 translation_unit: external_dcl .

    $default  reduce using rule 2 (translation_unit)


state 7

    4 external_dcl: function_def .

    $default  reduce using rule 4 (external_dcl)


state 8

    6 function_def: function_header . compound_st

    '{'  shift, and go to state 17

    compound_st  go to state 18


state 9

    7 function_header: dcl_spec . function_name formal_param
   28 declaration: dcl_spec . init_dcl_list ';'

    TIDENT  shift, and go to state 19

    function_name    go to state 20
    init_dcl_list    go to state 21
    init_declarator  go to state 22
    declarator       go to state 23


state 10

    8 dcl_spec: dcl_specifiers .
   10 dcl_specifiers: dcl_specifiers . dcl_specifier

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 8 (dcl_spec)

    dcl_specifier   go to state 24
    type_qualifier  go to state 12
    type_specifier  go to state 13


state 11

    9 dcl_specifiers: dcl_specifier .

    $default  reduce using rule 9 (dcl_specifiers)


state 12

   11 dcl_specifier: type_qualifier .

    $default  reduce using rule 11 (dcl_specifier)


state 13

   12 dcl_specifier: type_specifier .

    $default  reduce using rule 12 (dcl_specifier)


state 14

    5 external_dcl: declaration .

    $default  reduce using rule 5 (external_dcl)


state 15

    0 $accept: mini_c $end .

    $default  accept


state 16

    3 translation_unit: translation_unit external_dcl .

    $default  reduce using rule 3 (translation_unit)


state 17

   23 compound_st: '{' . opt_dcl_list opt_stat_list '}'

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 25 (opt_dcl_list)

    dcl_spec          go to state 25
    dcl_specifiers    go to state 10
    dcl_specifier     go to state 11
    type_qualifier    go to state 12
    type_specifier    go to state 13
    opt_dcl_list      go to state 26
    declaration_list  go to state 27
    declaration       go to state 28


state 18

    6 function_def: function_header compound_st .

    $default  reduce using rule 6 (function_def)


state 19

   16 function_name: TIDENT .
   32 declarator: TIDENT .
   33           | TIDENT . '[' opt_number ']'
   34           | TIDENT . '(' opt_number ')'

    '('  shift, and go to state 29
    '['  shift, and go to state 30

    '('       [reduce using rule 16 (function_name)]
    $default  reduce using rule 32 (declarator)


state 20

    7 function_header: dcl_spec function_name . formal_param

    '('  shift, and go to state 31

    formal_param  go to state 32


state 21

   28 declaration: dcl_spec init_dcl_list . ';'
   30 init_dcl_list: init_dcl_list . ',' init_declarator

    ','  shift, and go to state 33
    ';'  shift, and go to state 34


state 22

   29 init_dcl_list: init_declarator .

    $default  reduce using rule 29 (init_dcl_list)


state 23

   31 init_declarator: declarator .

    $default  reduce using rule 31 (init_declarator)


state 24

   10 dcl_specifiers: dcl_specifiers dcl_specifier .

    $default  reduce using rule 10 (dcl_specifiers)


state 25

   28 declaration: dcl_spec . init_dcl_list ';'

    TIDENT  shift, and go to state 35

    init_dcl_list    go to state 21
    init_declarator  go to state 22
    declarator       go to state 23


state 26

   23 compound_st: '{' opt_dcl_list . opt_stat_list '}'

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TIF      shift, and go to state 38
    TRETURN  shift, and go to state 39
    TWHILE   shift, and go to state 40
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '{'      shift, and go to state 17
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    ';'       reduce using rule 48 (opt_expression)
    $default  reduce using rule 38 (opt_stat_list)

    compound_st         go to state 46
    opt_stat_list       go to state 47
    statement_list      go to state 48
    statement           go to state 49
    expression_st       go to state 50
    opt_expression      go to state 51
    if_st               go to state 52
    while_st            go to state 53
    return_st           go to state 54
    expression          go to state 55
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 27

   24 opt_dcl_list: declaration_list .
   27 declaration_list: declaration_list . declaration

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 24 (opt_dcl_list)

    dcl_spec        go to state 25
    dcl_specifiers  go to state 10
    dcl_specifier   go to state 11
    type_qualifier  go to state 12
    type_specifier  go to state 13
    declaration     go to state 66


state 28

   26 declaration_list: declaration .

    $default  reduce using rule 26 (declaration_list)


state 29

   34 declarator: TIDENT '(' . opt_number ')'

    TNUMBER  shift, and go to state 67

    $default  reduce using rule 36 (opt_number)

    opt_number  go to state 68


state 30

   33 declarator: TIDENT '[' . opt_number ']'

    TNUMBER  shift, and go to state 67

    $default  reduce using rule 36 (opt_number)

    opt_number  go to state 69


state 31

   17 formal_param: '(' . opt_formal_param ')'

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    $default  reduce using rule 19 (opt_formal_param)

    dcl_spec           go to state 70
    dcl_specifiers     go to state 10
    dcl_specifier      go to state 11
    type_qualifier     go to state 12
    type_specifier     go to state 13
    opt_formal_param   go to state 71
    formal_param_list  go to state 72
    param_dcl          go to state 73


state 32

    7 function_header: dcl_spec function_name formal_param .

    $default  reduce using rule 7 (function_header)


state 33

   30 init_dcl_list: init_dcl_list ',' . init_declarator

    TIDENT  shift, and go to state 35

    init_declarator  go to state 74
    declarator       go to state 23


state 34

   28 declaration: dcl_spec init_dcl_list ';' .

    $default  reduce using rule 28 (declaration)


state 35

   32 declarator: TIDENT .
   33           | TIDENT . '[' opt_number ']'
   34           | TIDENT . '(' opt_number ')'

    '('  shift, and go to state 29
    '['  shift, and go to state 30

    $default  reduce using rule 32 (declarator)


state 36

   94 primary_exp: TIDENT .

    $default  reduce using rule 94 (primary_exp)


state 37

   95 primary_exp: TNUMBER .

    $default  reduce using rule 95 (primary_exp)


state 38

   49 if_st: TIF . '(' expression ')' statement
   50      | TIF . '(' expression ')' statement TELSE statement

    '('  shift, and go to state 75


state 39

   52 return_st: TRETURN . opt_expression ';'

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    $default  reduce using rule 48 (opt_expression)

    opt_expression      go to state 76
    expression          go to state 55
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 40

   51 while_st: TWHILE . '(' expression ')' statement

    '('  shift, and go to state 77


state 41

   83 unary_exp: TINC . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 78
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 42

   84 unary_exp: TDEC . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 79
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 43

   96 primary_exp: '(' . expression ')'

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    expression          go to state 80
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 44

   81 unary_exp: '-' . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 81
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 45

   82 unary_exp: '!' . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 82
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 46

   41 statement: compound_st .

    $default  reduce using rule 41 (statement)


state 47

   23 compound_st: '{' opt_dcl_list opt_stat_list . '}'

    '}'  shift, and go to state 83


state 48

   37 opt_stat_list: statement_list .
   40 statement_list: statement_list . statement

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TIF      shift, and go to state 38
    TRETURN  shift, and go to state 39
    TWHILE   shift, and go to state 40
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '{'      shift, and go to state 17
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    ';'       reduce using rule 48 (opt_expression)
    $default  reduce using rule 37 (opt_stat_list)

    compound_st         go to state 46
    statement           go to state 84
    expression_st       go to state 50
    opt_expression      go to state 51
    if_st               go to state 52
    while_st            go to state 53
    return_st           go to state 54
    expression          go to state 55
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 49

   39 statement_list: statement .

    $default  reduce using rule 39 (statement_list)


state 50

   42 statement: expression_st .

    $default  reduce using rule 42 (statement)


state 51

   46 expression_st: opt_expression . ';'

    ';'  shift, and go to state 85


state 52

   43 statement: if_st .

    $default  reduce using rule 43 (statement)


state 53

   44 statement: while_st .

    $default  reduce using rule 44 (statement)


state 54

   45 statement: return_st .

    $default  reduce using rule 45 (statement)


state 55

   47 opt_expression: expression .

    $default  reduce using rule 47 (opt_expression)


state 56

   53 expression: assignment_exp .

    $default  reduce using rule 53 (expression)


state 57

   54 assignment_exp: logical_or_exp .
   62 logical_or_exp: logical_or_exp . TOR logical_and_exp

    TOR  shift, and go to state 86

    $default  reduce using rule 54 (assignment_exp)


state 58

   61 logical_or_exp: logical_and_exp .
   64 logical_and_exp: logical_and_exp . TAND equality_exp

    TAND  shift, and go to state 87

    $default  reduce using rule 61 (logical_or_exp)


state 59

   63 logical_and_exp: equality_exp .
   66 equality_exp: equality_exp . TEQUAL relational_exp
   67             | equality_exp . TNOTEQUAL relational_exp

    TEQUAL     shift, and go to state 88
    TNOTEQUAL  shift, and go to state 89

    $default  reduce using rule 63 (logical_and_exp)


state 60

   65 equality_exp: relational_exp .
   69 relational_exp: relational_exp . '>' additive_exp
   70               | relational_exp . '<' additive_exp
   71               | relational_exp . TGREATE additive_exp
   72               | relational_exp . TLESSE additive_exp

    TGREATE  shift, and go to state 90
    TLESSE   shift, and go to state 91
    '>'      shift, and go to state 92
    '<'      shift, and go to state 93

    $default  reduce using rule 65 (equality_exp)


state 61

   68 relational_exp: additive_exp .
   74 additive_exp: additive_exp . '+' multiplicative_exp
   75             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95

    $default  reduce using rule 68 (relational_exp)


state 62

   73 additive_exp: multiplicative_exp .
   77 multiplicative_exp: multiplicative_exp . '*' unary_exp
   78                   | multiplicative_exp . '/' unary_exp
   79                   | multiplicative_exp . '%' unary_exp

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 73 (additive_exp)


state 63

   55 assignment_exp: unary_exp . '=' assignment_exp
   56               | unary_exp . TADD_ASSIGN assignment_exp
   57               | unary_exp . TSUB_ASSIGN assignment_exp
   58               | unary_exp . TMUL_ASSIGN assignment_exp
   59               | unary_exp . TDIV_ASSIGN assignment_exp
   60               | unary_exp . TMOD_ASSIGN assignment_exp
   76 multiplicative_exp: unary_exp .

    TADD_ASSIGN  shift, and go to state 99
    TSUB_ASSIGN  shift, and go to state 100
    TMUL_ASSIGN  shift, and go to state 101
    TDIV_ASSIGN  shift, and go to state 102
    TMOD_ASSIGN  shift, and go to state 103
    '='          shift, and go to state 104

    $default  reduce using rule 76 (multiplicative_exp)


state 64

   80 unary_exp: postfix_exp .
   86 postfix_exp: postfix_exp . '[' expression ']'
   87            | postfix_exp . '(' opt_actual_param ')'
   88            | postfix_exp . TINC
   89            | postfix_exp . TDEC

    TINC  shift, and go to state 105
    TDEC  shift, and go to state 106
    '('   shift, and go to state 107
    '['   shift, and go to state 108

    $default  reduce using rule 80 (unary_exp)


state 65

   85 postfix_exp: primary_exp .

    $default  reduce using rule 85 (postfix_exp)


state 66

   27 declaration_list: declaration_list declaration .

    $default  reduce using rule 27 (declaration_list)


state 67

   35 opt_number: TNUMBER .

    $default  reduce using rule 35 (opt_number)


state 68

   34 declarator: TIDENT '(' opt_number . ')'

    ')'  shift, and go to state 109


state 69

   33 declarator: TIDENT '[' opt_number . ']'

    ']'  shift, and go to state 110


state 70

   22 param_dcl: dcl_spec . declarator

    TIDENT  shift, and go to state 35

    declarator  go to state 111


state 71

   17 formal_param: '(' opt_formal_param . ')'

    ')'  shift, and go to state 112


state 72

   18 opt_formal_param: formal_param_list .
   21 formal_param_list: formal_param_list . ',' param_dcl

    ','  shift, and go to state 113

    $default  reduce using rule 18 (opt_formal_param)


state 73

   20 formal_param_list: param_dcl .

    $default  reduce using rule 20 (formal_param_list)


state 74

   30 init_dcl_list: init_dcl_list ',' init_declarator .

    $default  reduce using rule 30 (init_dcl_list)


state 75

   49 if_st: TIF '(' . expression ')' statement
   50      | TIF '(' . expression ')' statement TELSE statement

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    expression          go to state 114
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 76

   52 return_st: TRETURN opt_expression . ';'

    ';'  shift, and go to state 115


state 77

   51 while_st: TWHILE '(' . expression ')' statement

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    expression          go to state 116
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 78

   83 unary_exp: TINC unary_exp .

    $default  reduce using rule 83 (unary_exp)


state 79

   84 unary_exp: TDEC unary_exp .

    $default  reduce using rule 84 (unary_exp)


state 80

   96 primary_exp: '(' expression . ')'

    ')'  shift, and go to state 117


state 81

   81 unary_exp: '-' unary_exp .

    $default  reduce using rule 81 (unary_exp)


state 82

   82 unary_exp: '!' unary_exp .

    $default  reduce using rule 82 (unary_exp)


state 83

   23 compound_st: '{' opt_dcl_list opt_stat_list '}' .

    $default  reduce using rule 23 (compound_st)


state 84

   40 statement_list: statement_list statement .

    $default  reduce using rule 40 (statement_list)


state 85

   46 expression_st: opt_expression ';' .

    $default  reduce using rule 46 (expression_st)


state 86

   62 logical_or_exp: logical_or_exp TOR . logical_and_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    logical_and_exp     go to state 118
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 87

   64 logical_and_exp: logical_and_exp TAND . equality_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    equality_exp        go to state 120
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 88

   66 equality_exp: equality_exp TEQUAL . relational_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    relational_exp      go to state 121
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 89

   67 equality_exp: equality_exp TNOTEQUAL . relational_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    relational_exp      go to state 122
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 90

   71 relational_exp: relational_exp TGREATE . additive_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    additive_exp        go to state 123
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 91

   72 relational_exp: relational_exp TLESSE . additive_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    additive_exp        go to state 124
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 92

   69 relational_exp: relational_exp '>' . additive_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    additive_exp        go to state 125
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 93

   70 relational_exp: relational_exp '<' . additive_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    additive_exp        go to state 126
    multiplicative_exp  go to state 62
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 94

   74 additive_exp: additive_exp '+' . multiplicative_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    multiplicative_exp  go to state 127
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 95

   75 additive_exp: additive_exp '-' . multiplicative_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    multiplicative_exp  go to state 128
    unary_exp           go to state 119
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 96

   77 multiplicative_exp: multiplicative_exp '*' . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 129
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 97

   78 multiplicative_exp: multiplicative_exp '/' . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 130
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 98

   79 multiplicative_exp: multiplicative_exp '%' . unary_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    unary_exp    go to state 131
    postfix_exp  go to state 64
    primary_exp  go to state 65


state 99

   56 assignment_exp: unary_exp TADD_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 132
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 100

   57 assignment_exp: unary_exp TSUB_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 133
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 101

   58 assignment_exp: unary_exp TMUL_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 134
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 102

   59 assignment_exp: unary_exp TDIV_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 135
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 103

   60 assignment_exp: unary_exp TMOD_ASSIGN . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 136
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 104

   55 assignment_exp: unary_exp '=' . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 137
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 105

   88 postfix_exp: postfix_exp TINC .

    $default  reduce using rule 88 (postfix_exp)


state 106

   89 postfix_exp: postfix_exp TDEC .

    $default  reduce using rule 89 (postfix_exp)


state 107

   87 postfix_exp: postfix_exp '(' . opt_actual_param ')'

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    $default  reduce using rule 91 (opt_actual_param)

    assignment_exp      go to state 138
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    opt_actual_param    go to state 139
    actual_param_list   go to state 140
    primary_exp         go to state 65


state 108

   86 postfix_exp: postfix_exp '[' . expression ']'

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    expression          go to state 141
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 109

   34 declarator: TIDENT '(' opt_number ')' .

    $default  reduce using rule 34 (declarator)


state 110

   33 declarator: TIDENT '[' opt_number ']' .

    $default  reduce using rule 33 (declarator)


state 111

   22 param_dcl: dcl_spec declarator .

    $default  reduce using rule 22 (param_dcl)


state 112

   17 formal_param: '(' opt_formal_param ')' .

    $default  reduce using rule 17 (formal_param)


state 113

   21 formal_param_list: formal_param_list ',' . param_dcl

    TCONST  shift, and go to state 1
    TINT    shift, and go to state 2
    TVOID   shift, and go to state 3

    dcl_spec        go to state 70
    dcl_specifiers  go to state 10
    dcl_specifier   go to state 11
    type_qualifier  go to state 12
    type_specifier  go to state 13
    param_dcl       go to state 142


state 114

   49 if_st: TIF '(' expression . ')' statement
   50      | TIF '(' expression . ')' statement TELSE statement

    ')'  shift, and go to state 143


state 115

   52 return_st: TRETURN opt_expression ';' .

    $default  reduce using rule 52 (return_st)


state 116

   51 while_st: TWHILE '(' expression . ')' statement

    ')'  shift, and go to state 144


state 117

   96 primary_exp: '(' expression ')' .

    $default  reduce using rule 96 (primary_exp)


state 118

   62 logical_or_exp: logical_or_exp TOR logical_and_exp .
   64 logical_and_exp: logical_and_exp . TAND equality_exp

    TAND  shift, and go to state 87

    $default  reduce using rule 62 (logical_or_exp)


state 119

   76 multiplicative_exp: unary_exp .

    $default  reduce using rule 76 (multiplicative_exp)


state 120

   64 logical_and_exp: logical_and_exp TAND equality_exp .
   66 equality_exp: equality_exp . TEQUAL relational_exp
   67             | equality_exp . TNOTEQUAL relational_exp

    TEQUAL     shift, and go to state 88
    TNOTEQUAL  shift, and go to state 89

    $default  reduce using rule 64 (logical_and_exp)


state 121

   66 equality_exp: equality_exp TEQUAL relational_exp .
   69 relational_exp: relational_exp . '>' additive_exp
   70               | relational_exp . '<' additive_exp
   71               | relational_exp . TGREATE additive_exp
   72               | relational_exp . TLESSE additive_exp

    TGREATE  shift, and go to state 90
    TLESSE   shift, and go to state 91
    '>'      shift, and go to state 92
    '<'      shift, and go to state 93

    $default  reduce using rule 66 (equality_exp)


state 122

   67 equality_exp: equality_exp TNOTEQUAL relational_exp .
   69 relational_exp: relational_exp . '>' additive_exp
   70               | relational_exp . '<' additive_exp
   71               | relational_exp . TGREATE additive_exp
   72               | relational_exp . TLESSE additive_exp

    TGREATE  shift, and go to state 90
    TLESSE   shift, and go to state 91
    '>'      shift, and go to state 92
    '<'      shift, and go to state 93

    $default  reduce using rule 67 (equality_exp)


state 123

   71 relational_exp: relational_exp TGREATE additive_exp .
   74 additive_exp: additive_exp . '+' multiplicative_exp
   75             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95

    $default  reduce using rule 71 (relational_exp)


state 124

   72 relational_exp: relational_exp TLESSE additive_exp .
   74 additive_exp: additive_exp . '+' multiplicative_exp
   75             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95

    $default  reduce using rule 72 (relational_exp)


state 125

   69 relational_exp: relational_exp '>' additive_exp .
   74 additive_exp: additive_exp . '+' multiplicative_exp
   75             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95

    $default  reduce using rule 69 (relational_exp)


state 126

   70 relational_exp: relational_exp '<' additive_exp .
   74 additive_exp: additive_exp . '+' multiplicative_exp
   75             | additive_exp . '-' multiplicative_exp

    '+'  shift, and go to state 94
    '-'  shift, and go to state 95

    $default  reduce using rule 70 (relational_exp)


state 127

   74 additive_exp: additive_exp '+' multiplicative_exp .
   77 multiplicative_exp: multiplicative_exp . '*' unary_exp
   78                   | multiplicative_exp . '/' unary_exp
   79                   | multiplicative_exp . '%' unary_exp

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 74 (additive_exp)


state 128

   75 additive_exp: additive_exp '-' multiplicative_exp .
   77 multiplicative_exp: multiplicative_exp . '*' unary_exp
   78                   | multiplicative_exp . '/' unary_exp
   79                   | multiplicative_exp . '%' unary_exp

    '*'  shift, and go to state 96
    '/'  shift, and go to state 97
    '%'  shift, and go to state 98

    $default  reduce using rule 75 (additive_exp)


state 129

   77 multiplicative_exp: multiplicative_exp '*' unary_exp .

    $default  reduce using rule 77 (multiplicative_exp)


state 130

   78 multiplicative_exp: multiplicative_exp '/' unary_exp .

    $default  reduce using rule 78 (multiplicative_exp)


state 131

   79 multiplicative_exp: multiplicative_exp '%' unary_exp .

    $default  reduce using rule 79 (multiplicative_exp)


state 132

   56 assignment_exp: unary_exp TADD_ASSIGN assignment_exp .

    $default  reduce using rule 56 (assignment_exp)


state 133

   57 assignment_exp: unary_exp TSUB_ASSIGN assignment_exp .

    $default  reduce using rule 57 (assignment_exp)


state 134

   58 assignment_exp: unary_exp TMUL_ASSIGN assignment_exp .

    $default  reduce using rule 58 (assignment_exp)


state 135

   59 assignment_exp: unary_exp TDIV_ASSIGN assignment_exp .

    $default  reduce using rule 59 (assignment_exp)


state 136

   60 assignment_exp: unary_exp TMOD_ASSIGN assignment_exp .

    $default  reduce using rule 60 (assignment_exp)


state 137

   55 assignment_exp: unary_exp '=' assignment_exp .

    $default  reduce using rule 55 (assignment_exp)


state 138

   92 actual_param_list: assignment_exp .

    $default  reduce using rule 92 (actual_param_list)


state 139

   87 postfix_exp: postfix_exp '(' opt_actual_param . ')'

    ')'  shift, and go to state 145


state 140

   90 opt_actual_param: actual_param_list .
   93 actual_param_list: actual_param_list . ',' assignment_exp

    ','  shift, and go to state 146

    $default  reduce using rule 90 (opt_actual_param)


state 141

   86 postfix_exp: postfix_exp '[' expression . ']'

    ']'  shift, and go to state 147


state 142

   21 formal_param_list: formal_param_list ',' param_dcl .

    $default  reduce using rule 21 (formal_param_list)


state 143

   49 if_st: TIF '(' expression ')' . statement
   50      | TIF '(' expression ')' . statement TELSE statement

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TIF      shift, and go to state 38
    TRETURN  shift, and go to state 39
    TWHILE   shift, and go to state 40
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '{'      shift, and go to state 17
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    $default  reduce using rule 48 (opt_expression)

    compound_st         go to state 46
    statement           go to state 148
    expression_st       go to state 50
    opt_expression      go to state 51
    if_st               go to state 52
    while_st            go to state 53
    return_st           go to state 54
    expression          go to state 55
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 144

   51 while_st: TWHILE '(' expression ')' . statement

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TIF      shift, and go to state 38
    TRETURN  shift, and go to state 39
    TWHILE   shift, and go to state 40
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '{'      shift, and go to state 17
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    $default  reduce using rule 48 (opt_expression)

    compound_st         go to state 46
    statement           go to state 149
    expression_st       go to state 50
    opt_expression      go to state 51
    if_st               go to state 52
    while_st            go to state 53
    return_st           go to state 54
    expression          go to state 55
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 145

   87 postfix_exp: postfix_exp '(' opt_actual_param ')' .

    $default  reduce using rule 87 (postfix_exp)


state 146

   93 actual_param_list: actual_param_list ',' . assignment_exp

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    assignment_exp      go to state 150
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 147

   86 postfix_exp: postfix_exp '[' expression ']' .

    $default  reduce using rule 86 (postfix_exp)


state 148

   49 if_st: TIF '(' expression ')' statement .
   50      | TIF '(' expression ')' statement . TELSE statement

    TELSE  shift, and go to state 151

    TELSE     [reduce using rule 49 (if_st)]
    $default  reduce using rule 49 (if_st)


state 149

   51 while_st: TWHILE '(' expression ')' statement .

    $default  reduce using rule 51 (while_st)


state 150

   93 actual_param_list: actual_param_list ',' assignment_exp .

    $default  reduce using rule 93 (actual_param_list)


state 151

   50 if_st: TIF '(' expression ')' statement TELSE . statement

    TIDENT   shift, and go to state 36
    TNUMBER  shift, and go to state 37
    TIF      shift, and go to state 38
    TRETURN  shift, and go to state 39
    TWHILE   shift, and go to state 40
    TINC     shift, and go to state 41
    TDEC     shift, and go to state 42
    '('      shift, and go to state 43
    '{'      shift, and go to state 17
    '-'      shift, and go to state 44
    '!'      shift, and go to state 45

    $default  reduce using rule 48 (opt_expression)

    compound_st         go to state 46
    statement           go to state 152
    expression_st       go to state 50
    opt_expression      go to state 51
    if_st               go to state 52
    while_st            go to state 53
    return_st           go to state 54
    expression          go to state 55
    assignment_exp      go to state 56
    logical_or_exp      go to state 57
    logical_and_exp     go to state 58
    equality_exp        go to state 59
    relational_exp      go to state 60
    additive_exp        go to state 61
    multiplicative_exp  go to state 62
    unary_exp           go to state 63
    postfix_exp         go to state 64
    primary_exp         go to state 65


state 152

   50 if_st: TIF '(' expression ')' statement TELSE statement .

    $default  reduce using rule 50 (if_st)
